name: Bob the Builder

on:
  #pull_request:
  #push:
  #  branches:
  #    - main
  workflow_dispatch:

jobs:
  build:
    if: ${{github.ref_name == 'main' && github.event_name == 'push'}} || github.event_name == 'workflow_dispatch'
    name: Vendor example build [${{ matrix.platform }}]
    runs-on: [self-hosted, latest]
    strategy:
      matrix:
        platform: [aarch64, x86_64]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          clean: true
          submodules: recursive

      - name: Set Build Variables
        id: vars
        run: |
          target=${{ matrix.platform }}
          echo "dir=vendor-example-$target"        >> $GITHUB_OUTPUT
          echo "tgz=vendor-example-$target.tar.gz" >> $GITHUB_OUTPUT

      - name: Restore Cache of dl/
        uses: actions/cache@v4
        with:
          path: dl/
          key: dl-${{ matrix.platform }}-${{ hashFiles('.git/modules/infix/refs/heads/main', 'configs/*') }}
          restore-keys: |
            dl-${{ matrix.platform }}-
            dl-

      - name: Restore Cache of .ccache/
        uses: actions/cache@v4
        with:
          path: .ccache/
          key: ccache-${{ matrix.platform }}-${{ hashFiles('.git/modules/infix/refs/heads/main', 'configs/*') }}
          restore-keys: |
            ccache-${{ matrix.platform }}-
            ccache-

      - name: Configure & Build
        run: |
          target=${{ matrix.platform }}_vendor_example_defconfig
          echo "Buildring $target ..."
          make $target
          make

      - name: Prepare Artifact
        run: |
          cd output
          mv images ${{ steps.vars.outputs.dir }}
          ln -s ${{ steps.vars.outputs.dir }} images
          tar chfz ${{ steps.vars.outputs.tgz }} ${{ steps.vars.outputs.dir }}

      - uses: actions/upload-artifact@v4
        with:
          path: output/${{ steps.vars.outputs.tgz }}
          name: artifact-${{ matrix.platform }}

  release:
    if: github.repository == 'kernelkit/vendor-example' && github.ref == 'refs/heads/main'
    permissions: write-all
    name: Upload Latest Build
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: "artifact-*"
          merge-multiple: true
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          omitName: true
          omitBody: true
          omitBodyDuringUpdate: true
          prerelease: true
          tag: "latest"
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "*.tar.gz"
      - name: Summary
        run: |
          cat <<EOF >> $GITHUB_STEP_SUMMARY
          # Latest Build Complete! :rocket:
          
          For the public download links of these build artifacts, please see:
           <https://github.com/kernelkit/vendor-example/releases/tag/latest>
          EOF
